openapi: "3.0.2"
info:
  title: Api Bus Travel
  version: "1.1.1"
  contact:
    name: Maulidito Dwinandana
    email: maulidito@gmail.com
  description: Dokumentasi Portofolio manajemen bus travel
servers:
  - url: http://localhost:8080/v1
tags:
  - name: Bus
    description: "endpoint that related on data Bus"
  - name: Agency
    description: "endpoint that related on data Agency"
  - name: Customer
    description: "endpoint that related on data Customer"
  - name: Ticket
    description: "endpoint that related on data Ticket"
  - name: Schedule
    description: "endpoint that related on data Schedule"
  - name: Driver
    description: "endpoint that related on data Driver"
components:
  securitySchemes:
    authAgency:
      type: apiKey
      in: cookie
      name: x-api-key Agency
      description: Authorization for agency

  parameters:
    scheduleId:
      in: path
      name: scheduleId
      schema:
        type: integer
      required: true
    busId:
      in: path
      name: busId
      schema:
        type: integer
      required: true
    agencyId:
      in: path
      name: agencyId
      schema:
        type: integer
      required: true
    driverId:
      in: path
      name: driverId
      schema:
        type: integer
      required: true
    customerId:
      in: path
      name: customerId
      schema:
        type: integer
      required: true
    ticketId:
      in: path
      name: ticketId
      schema:
        type: integer
      required: true
    limit:
      in: query
      name: limit
      schema:
        type: integer
      description: "Limitation Get Data"

  schemas:
    responseNoData:
      type: "object"
      properties:
        code:
          type: "number"
        status:
          type: "string"
    agencyComponent:
      type: "object"
      properties:
        agencyId:
          type: "number"
        name:
          type: "string"
        place:
          type: "string"
    busComponent:
      type: object
      properties:
        busId:
          type: integer
        agencyId:
          type: integer
        numberPlate:
          type: string

    busAgencyComponent:
      type: object
      properties:
        agency:
          $ref: "#/components/schemas/agencyComponent"
        bus:
          type: "object"
          properties:
            busId:
              type: integer
            numberPlate:
              type: string
    customerComponent:
      type: object
      properties:
        customerId:
          type: integer
        name:
          type: string
        phoneNumber:
          type: string
    driverComponent:
      type: object
      properties:
        driverId:
          type: integer
        agencyId:
          type: integer
        name:
          type: string
    scheduleComponent:
      type: object
      properties:
        scheduleId:
          type: integer
        fromAgencyId:
          type: integer
        toAgencyId:
          type: integer
        busId:
          type: integer
        driverId:
          type: integer
        price:
          type: integer
        date:
          type: string
        arrived:
          type: boolean

    driverAgencyComponent:
      type: "object"
      properties:
        agency:
          $ref: "#/components/schemas/agencyComponent"
        driver:
          type: object
          properties:
            driverId:
              type: integer
            name:
              type: string
    ticketComponent:
      type: object
      properties:
        ticketId:
          type: integer
        scheduleId:
          type: integer
        customerId:
          type: integer
        date:
          type: string

    responseBindingError:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              errorMessage:
                type: string
    responseError:
      type: object
      properties:
        code:
          type: integer
        status:
          type: string
        data:
          type: object
          properties:
            errorMessage:
              type: string

paths:
  /agency:
    get:
      tags:
        - "Agency"
      description: "Get List All Agency"
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: "Get All Agency from specific Name"

        - $ref: "#/components/parameters/limit"

        - in: query
          name: place
          schema:
            type: string
          description: "Get All Agency from specific Place"

        - in: query
          name: belowBusCount
          schema:
            type: integer
          description: "Get All Agency where bus is below parameter"

        - in: query
          name: aboveBusCount
          schema:
            type: integer
          description: "Get All Agency where bus is abive parameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "number"
                  status:
                    type: "string"
                  filter:
                    type: object
                    properties:
                      name:
                        type: string
                      limit:
                        type: integer
                      place:
                        type: string
                      belowBusCount:
                        type: integer
                      aboveBusCount:
                        type: integer
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/agencyComponent"

          description: OK
    post:
      description: "Adding one Agency from request"
      security:
        - authAgency: []
      tags:
        - "Agency"
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                place:
                  type: string
        description: "Request Body"
      summary: "adding agency"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNoData"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBindingError"
          description: Bad Request

  /agency/{agencyId}:
    get:
      tags:
        - "Agency"
      description: "Get Specific Agency"
      parameters:
        - $ref: "#/components/parameters/agencyId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: "number"
                  status:
                    type: "string"
                  data:
                    $ref: "#/components/schemas/agencyComponent"

          description: OK
    delete:
      security:
        - authAgency: []
      description: "Delete specific Agency with Id"
      tags:
        - "Agency"
      parameters:
        - $ref: "#/components/parameters/agencyId"

      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/agencyComponent"

          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /bus:
    get:
      tags:
        - "Bus"
      description: "Get all bus on all agency"
      parameters:
        - in: query
          name: frontNumberPlate
          schema:
            type: string
          description: "Get all bus from specific Front Number Plate"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  filter:
                    type: object
                    properties:
                      frontNumberPlate:
                        type: string
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/busComponent"
          description: OK
    post:
      security:
        - authAgency: []
      tags:
        - "Bus"
      description: ""

      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                agencyId:
                  type: integer
                numberPlate:
                  type: string

      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNoData"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBindingError"
          description: BAD REQUEST

  /bus/agency/{agencyId}:
    get:
      tags:
        - "Bus"
      description: "Get all bus from specific agency"
      parameters:
        - $ref: "#/components/parameters/agencyId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/busComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /bus/{busId}:
    delete:
      security:
        - authAgency: []
      tags:
        - "Bus"
      description: "Delete specific Bus on Specific Agency"
      parameters:
        - $ref: "#/components/parameters/busId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/busComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found
    get:
      tags:
        - "Bus"
      description: ""
      parameters:
        - $ref: "#/components/parameters/busId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/busComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /driver:
    get:
      tags:
        - "Driver"
      description: "Get all driver from all agency"
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: "Get All Customer from specific Name"

        - $ref: "#/components/parameters/limit"

      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  filter:
                    type: object
                    properties:
                      name:
                        type: string
                      limit:
                        type: integer

                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/driverComponent"
          description: OK
    post:
      security:
        - authAgency: []
      tags:
        - "Driver"
      description: "Adding driver to specific Agency"
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                agencyId:
                  type: integer
                name:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNoData"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBindingError"
          description: BAD REQUEST

  /driver/agency/{agencyId}:
    get:
      tags:
        - "Driver"
      description: "get all driver from specific agency"
      parameters:
        - $ref: "#/components/parameters/agencyId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/driverComponent"

          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /driver/{driverId}:
    get:
      tags:
        - "Driver"
      description: "get specific driver"
      parameters:
        - $ref: "#/components/parameters/driverId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/driverComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

    delete:
      security:
        - authAgency: []
      tags:
        - "Driver"
      description: "delete specific driver from specific agency"
      parameters:
        - $ref: "#/components/parameters/driverId"

      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/driverComponent"

          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /customer:
    get:
      tags:
        - "Customer"
      description: "Get List All Customer"
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: "Get All Customer from specific Name"

        - $ref: "#/components/parameters/limit"

        - in: query
          name: frontNumber
          schema:
            type: string
          description: "Get All Customer from 4 front number"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  code:
                    type: "number"
                  status:
                    type: "string"
                  filter:
                    type: object
                    properties:
                      name:
                        type: string
                      limit:
                        type: integer
                      frontNumber:
                        type: string
                  data:
                    type: "array"
                    items:
                      $ref: "#/components/schemas/customerComponent"

          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found
    post:
      description: "Adding one Customer from request"
      tags:
        - "Customer"
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
                phoneNumber:
                  type: string
        description: "Request Body"
      summary: "adding Customer"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNoData"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNoData"
          description: Bad Request

  /customer/{customerId}:
    get:
      tags:
        - "Customer"
      description: "Get Specific Customer"
      parameters:
        - $ref: "#/components/parameters/customerId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: "number"
                  status:
                    type: "string"
                  data:
                    $ref: "#/components/schemas/customerComponent"

          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found
    delete:
      description: "Delete specific Customer with Id"
      tags:
        - "Customer"
      parameters:
        - $ref: "#/components/parameters/customerId"

      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/customerComponent"

          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /ticket:
    get:
      tags:
        - "Ticket"
      description: "get all data ticket"
      parameters:
        - in: query
          name: fromDate
          schema:
            type: string
          description: "Get All Customer from specific Name"

        - in: query
          name: toDate
          schema:
            type: string
          description: "Get All Customer from specific Name"

        - in: query
          name: OnDate
          schema:
            type: string
          description: "Get All Ticket On Date, cannot join fromDate and ToDate"

        - in: query
          name: departurePlace
          schema:
            type: string
          description: "Get All Customer from specific Name"

        - in: query
          name: arrivalPlace
          schema:
            type: string
          description: "Get All Customer from specific Name"

        - in: query
          name: arrived
          schema:
            type: boolean
          description: "Get All Customer from specific Name"
          example: false

        - in: query
          name: limit
          schema:
            type: integer
          description: "Limitation Get Data"
          examples:
            1:
              value: 5
              summary: Sample 5 Limit
            2:
              summary: Sample 100 Limit
              value: 100
        - in: query
          name: priceAbove
          schema:
            type: integer
          description: "Get All Ticket on specific price above parameter"

        - in: query
          name: priceBelow
          schema:
            type: integer
          description: "Get All Ticket on specific price below parameter"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ticketComponent"
          description: OK
    post:
      security:
        - authAgency: []
      tags:
        - "Ticket"
      description: "Adding a ticket"
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                scheduleId:
                  type: integer
                customerId:
                  type: integer

      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNoData"
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBindingError"
          description: BAD REQUEST

  /ticket/price:
    get:
      tags:
        - "Ticket"
      description: "sum all price from all ticket"
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      totalPrice:
                        type: integer
                      ticketCount:
                        type: integer

          description: OK

  /ticket/agency/{agencyId}/price:
    get:
      security:
        - authAgency: []
      tags:
        - "Ticket"
      description: "sum all price from all ticket on specific agency"
      parameters:
        - $ref: "#/components/parameters/agencyId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      agency:
                        $ref: "#/components/schemas/agencyComponent"
                      totalPrice:
                        type: integer
                      ticketCount:
                        type: integer

          description: OK

  /ticket/driver/{driverId}/price:
    get:
      security:
        - authAgency: []
      tags:
        - "Ticket"
      description: "sum all price from all ticket on specific driver"
      parameters:
        - $ref: "#/components/parameters/driverId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: object
                    properties:
                      agency:
                        $ref: "#/components/schemas/driverComponent"
                      totalPrice:
                        type: integer
                      ticketCount:
                        type: integer

          description: OK

  /ticket/{ticketId}:
    get:
      tags:
        - "Ticket"
      description: ""
      parameters:
        - $ref: "#/components/parameters/ticketId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ticketComponent"

          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

    delete:
      security:
        - authAgency: []
      tags:
        - "Ticket"
      description: ""
      parameters:
        - $ref: "#/components/parameters/ticketId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/ticketComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /ticket/driver/{driverId}:
    get:
      tags:
        - "Ticket"
      description: "get all ticket from specific driver"
      parameters:
        - $ref: "#/components/parameters/driverId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: "object"
                    properties:
                      driver:
                        $ref: "#/components/schemas/driverComponent"
                      ticket:
                        type: "array"
                        items:
                          type: object
                          $ref: "#/components/schemas/ticketComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /ticket/customer/{customerId}:
    get:
      tags:
        - "Ticket"
      description: "get all ticket from specific customer"
      parameters:
        - $ref: "#/components/parameters/customerId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: "object"
                    properties:
                      customer:
                        $ref: "#/components/schemas/customerComponent"
                      ticket:
                        type: "array"
                        items:
                          type: object
                          $ref: "#/components/schemas/ticketComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found

  /ticket/bus/{busId}:
    get:
      tags:
        - "Ticket"
      description: "Get all Ticket from specific bus Id"
      parameters:
        - $ref: "#/components/parameters/busId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: "object"
                    properties:
                      bus:
                        $ref: "#/components/schemas/busComponent"
                      ticket:
                        type: "array"
                        items:
                          type: object
                          $ref: "#/components/schemas/ticketComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: Not Found
  /ticket/agency/{agencyId}:
    get:
      description: "Get all ticket on specific Agency"
      tags:
        - "Ticket"
      parameters:
        - $ref: "#/components/parameters/agencyId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: "object"
                    properties:
                      agency:
                        type: "object"
                        properties:
                          agencyId:
                            type: integer
                          name:
                            type: string
                          place:
                            type: string
                      ticket:
                        type: "array"
                        items:
                          type: object
                          $ref: "#/components/schemas/ticketComponent"
          description: OK
  /schedule:
    get:
      tags:
        - "Schedule"
      description: "Get All Schedule Data"
      parameters:
        - $ref: "#/components/parameters/limit"
        - in: query
          name: arrived
          schema:
            type: boolean
          description: "filter data with specific arrived"
          example: false
        - in: query
          name: fromAgency
          schema:
            type: string
          description: "filter data with from specific agency"
        - in: query
          name: toAgency
          schema:
            type: string
          description: "filter data with to specific agency"
        - in: query
          name: priceAbove
          schema:
            type: integer
          description: "Get All Schedule on specific price above parameter"

        - in: query
          name: priceBelow
          schema:
            type: integer
          description: "Get All Schedule on specific price below parameter"
        - in: query
          name: OnDate
          schema:
            type: string
          description: "Get All Schedule On Date"

      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: "Not Found Any Data"
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/scheduleComponent"

          description: OK
    post:
      security:
        - authAgency: []
      tags:
        - "Schedule"
      description: "Add Schedule"
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                fromAgencyId:
                  type: integer
                toAgencyId:
                  type: integer
                busId:
                  type: integer
                driverId:
                  type: integer
                price:
                  type: integer
                date:
                  type: string
                arrived:
                  type: boolean
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBindingError"
          description: "Bad Request"
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseNoData"
          description: OK
  /schedule/{scheduleId}:
    get:
      tags:
        - "Schedule"
      description: ""
      parameters:
        - $ref: "#/components/parameters/scheduleId"
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: "Not Found Data"
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/scheduleComponent"
          description: OK
    delete:
      security:
        - authAgency: []
      tags:
        - "Schedule"
      description: "Delete Schedule Data"
      parameters:
        - $ref: "#/components/parameters/scheduleId"
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/scheduleComponent"
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseError"
          description: "Not Found Data"

  /schedule/{scheduleId}/arrived:
    patch:
      security:
        - authAgency: []
      tags:
        - "Schedule"
      description: "Update Arrived Schedule"
      parameters:
        - $ref: "#/components/parameters/scheduleId"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                arrived:
                  type: boolean
      responses:
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/responseBindingError"
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: integer
                  status:
                    type: string
                  data:
                    $ref: "#/components/schemas/scheduleComponent"

          description: OK
